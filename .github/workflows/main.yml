name: Build and deploy
on:
  push:
    branches:
      - main
    paths:
      - app/**
env:
  ACR: epmacr9918.azurecr.io
jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository 
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # For SonarCloud - fetch full repo

    - name: Tests - setup Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Tests - install dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install libmariadb3 libmariadb-dev
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
    - name: Tests - run
      run: pytest -vv app

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Set environment variables
      run: |
        # Set k8s namespace name
        if [ $GITHUB_REF_NAME = 'main' ]
          then echo "NAMESPACE=prod" >> $GITHUB_ENV
          else echo "NAMESPACE=dev"  >> $GITHUB_ENV
        fi
        # Set docker image path
        echo "IMAGE_ACR=${{ env.ACR }}/nhltop:$GITHUB_SHA" >> $GITHUB_ENV
        echo "IMAGE_ECR=${{ env.ECR }}/nhltop:$GITHUB_SHA" >> $GITHUB_ENV
    - name: Build image
      run: |
        docker build "$GITHUB_WORKSPACE/app" \
               -f "app/Dockerfile" \
               -t ${{ env.IMAGE_ACR }} \
               --label dockerfile-path=app/Dockerfile
        docker tag ${{ env.IMAGE_ACR }} ${{ env.IMAGE_ECR }}
    
    - name: Login to Azure container registry 
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Push image to Azure
      run: docker push ${{ env.IMAGE_ACR }}
    
    - name: Set kubernetes context for Azure
      uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Set deployment image for Azure
      run: |
        kubectl -n ${{ env.NAMESPACE }} \
          set image deploy/nhltop *=${{ env.IMAGE_ACR }}
